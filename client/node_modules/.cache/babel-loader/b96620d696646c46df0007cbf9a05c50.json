{"ast":null,"code":"import styled from 'styled-components';\nconst AnimatedButton = styled.button`\n\tbackground-color: ${({\n  buttonColor\n}) => {\n  if (buttonColor === undefined || '') {\n    return props => props.theme.Orange;\n  } else {\n    return buttonColor = props => props.buttonColor;\n  }\n}};\n\tcolor: ${props => props.theme.OffWhite};\n\tcursor: pointer;\n\tfont-size: 1rem;\n\tborder: 0;\n\ttransition: all 0.5s;\n\tborder-radius: 0.7rem;\n\twidth: 10rem;\n\tposition: relative;\n\theight: 3rem;\n\talign-self: center;\n\n\t&:after {\n\t\tcontent: '${props => props.icon}';\n\t\tfont-weight: normal;\n\t\tposition: absolute;\n\t\tleft: 70%;\n\t\ttop: auto;\n\t\tbottom: auto;\n\t\topacity: 0;\n\t\tcolor: ${props => props.theme.DeepGreen};\n\t}\n\n\t&:hover {\n\t\tbackground: ${({\n  hoverColor\n}) => {\n  if (hoverColor === undefined || '') {\n    return props => props.theme.LightGreen;\n  } else {\n    return hoverColor = props => props.hoverColor;\n  }\n}};\n\t\ttransition: all 0.5s;\n\t\tborder-radius: 10px;\n\t\tpadding: 0.7rem 3.5rem 0.7rem 0.7rem;\n\t\tcolor: ${({\n  hoverFontColor\n}) => {\n  if (hoverFontColor === undefined || '') {\n    return props => props.theme.OffWhite;\n  } else {\n    return hoverFontColor = props => props.hoverFontColor;\n  }\n}};\n\t\tfont-weight: bold;\n\n\t\t&:after {\n\t\t\topacity: 1;\n\t\t\ttransition: all 0.5s;\n\t\t}\n\t}\n`;\nexport default AnimatedButton;","map":{"version":3,"sources":["C:/Users/MircoFiocchi/Desktop/BroadcastApp/client/src/components/Global/AnimatedButton/index.js"],"names":["styled","AnimatedButton","button","buttonColor","undefined","props","theme","Orange","OffWhite","icon","DeepGreen","hoverColor","LightGreen","hoverFontColor"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,cAAc,GAAGD,MAAM,CAACE,MAAO;AACrC,qBAAqB,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAqB;AACxC,MAAIA,WAAW,KAAKC,SAAhB,IAA6B,EAAjC,EAAqC;AACpC,WAAQC,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYC,MAA9B;AACA,GAFD,MAEO;AACN,WAAQJ,WAAW,GAAIE,KAAD,IAAWA,KAAK,CAACF,WAAvC;AACA;AACD,CAAC;AACH,UAAWE,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYE,QAAS;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAeH,KAAD,IAAWA,KAAK,CAACI,IAAK;AACpC;AACA;AACA;AACA;AACA;AACA;AACA,WAAYJ,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYI,SAAU;AAC5C;AACA;AACA;AACA,gBAAgB,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AACjC,MAAIA,UAAU,KAAKP,SAAf,IAA4B,EAAhC,EAAoC;AACnC,WAAQC,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYM,UAA9B;AACA,GAFD,MAEO;AACN,WAAQD,UAAU,GAAIN,KAAD,IAAWA,KAAK,CAACM,UAAtC;AACA;AACD,CAAC;AACJ;AACA;AACA;AACA,WAAW,CAAC;AAAEE,EAAAA;AAAF,CAAD,KAAwB;AAChC,MAAIA,cAAc,KAAKT,SAAnB,IAAgC,EAApC,EAAwC;AACvC,WAAQC,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYE,QAA9B;AACA,GAFD,MAEO;AACN,WAAQK,cAAc,GAAIR,KAAD,IAAWA,KAAK,CAACQ,cAA1C;AACA;AACD,CAAC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAvDA;AAyDA,eAAeZ,cAAf","sourcesContent":["import styled from 'styled-components';\r\n\r\nconst AnimatedButton = styled.button`\r\n\tbackground-color: ${({ buttonColor }) => {\r\n\t\tif (buttonColor === undefined || '') {\r\n\t\t\treturn (props) => props.theme.Orange;\r\n\t\t} else {\r\n\t\t\treturn (buttonColor = (props) => props.buttonColor);\r\n\t\t}\r\n\t}};\r\n\tcolor: ${(props) => props.theme.OffWhite};\r\n\tcursor: pointer;\r\n\tfont-size: 1rem;\r\n\tborder: 0;\r\n\ttransition: all 0.5s;\r\n\tborder-radius: 0.7rem;\r\n\twidth: 10rem;\r\n\tposition: relative;\r\n\theight: 3rem;\r\n\talign-self: center;\r\n\r\n\t&:after {\r\n\t\tcontent: '${(props) => props.icon}';\r\n\t\tfont-weight: normal;\r\n\t\tposition: absolute;\r\n\t\tleft: 70%;\r\n\t\ttop: auto;\r\n\t\tbottom: auto;\r\n\t\topacity: 0;\r\n\t\tcolor: ${(props) => props.theme.DeepGreen};\r\n\t}\r\n\r\n\t&:hover {\r\n\t\tbackground: ${({ hoverColor }) => {\r\n\t\t\tif (hoverColor === undefined || '') {\r\n\t\t\t\treturn (props) => props.theme.LightGreen;\r\n\t\t\t} else {\r\n\t\t\t\treturn (hoverColor = (props) => props.hoverColor);\r\n\t\t\t}\r\n\t\t}};\r\n\t\ttransition: all 0.5s;\r\n\t\tborder-radius: 10px;\r\n\t\tpadding: 0.7rem 3.5rem 0.7rem 0.7rem;\r\n\t\tcolor: ${({ hoverFontColor }) => {\r\n\t\t\tif (hoverFontColor === undefined || '') {\r\n\t\t\t\treturn (props) => props.theme.OffWhite;\r\n\t\t\t} else {\r\n\t\t\t\treturn (hoverFontColor = (props) => props.hoverFontColor);\r\n\t\t\t}\r\n\t\t}};\r\n\t\tfont-weight: bold;\r\n\r\n\t\t&:after {\r\n\t\t\topacity: 1;\r\n\t\t\ttransition: all 0.5s;\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nexport default AnimatedButton;\r\n"]},"metadata":{},"sourceType":"module"}