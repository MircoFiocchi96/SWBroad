{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\MircoFiocchi\\\\Desktop\\\\BroadcastApp\\\\client\\\\src\\\\containers\\\\UserConfigurations\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { userConfig_OpenSelector, userConfig_NicknameSelector } from './selectors';\nimport { changeNicknameInputValue, closeUserConfig } from './actions';\nimport { StyledModal } from '../../components/Global/Modal/ModalStyles.elements';\nimport { SuccessButton } from '../../components/CreateChannel/CreateChannelStyles.elements';\nimport CreateChannelModalInput from '../../components/CreateChannel/CreateChannelModalInput';\nimport { signupAgainstAPI } from '../Auth/actions';\nexport default function UserConfigurations() {\n  _s();\n\n  const open = useSelector(userConfig_OpenSelector);\n  const nickname = useSelector(userConfig_NicknameSelector);\n  const dispatch = useDispatch();\n\n  const handleClose = e => {\n    e.preventDefault();\n    dispatch(closeUserConfig());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(signupAgainstAPI());\n  };\n\n  const onChangeHandler = e => {\n    e.preventDefault();\n    dispatch(changeNicknameInputValue(e.target.value));\n  };\n\n  return /*#__PURE__*/_jsxDEV(StyledModal, {\n    isOpen: open,\n    children: [/*#__PURE__*/_jsxDEV(CreateChannelModalInput, {\n      onChangeHandler: onChangeHandler,\n      value: nickname !== null && nickname !== void 0 ? nickname : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SuccessButton, {\n      className: \"successButton\",\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserConfigurations, \"jVUZ+S07ZPi4RVjLO32gLIaHf+U=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = UserConfigurations;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserConfigurations\");","map":{"version":3,"sources":["C:/Users/MircoFiocchi/Desktop/BroadcastApp/client/src/containers/UserConfigurations/index.js"],"names":["React","useDispatch","useSelector","userConfig_OpenSelector","userConfig_NicknameSelector","changeNicknameInputValue","closeUserConfig","StyledModal","SuccessButton","CreateChannelModalInput","signupAgainstAPI","UserConfigurations","open","nickname","dispatch","handleClose","e","preventDefault","handleSubmit","onChangeHandler","target","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACEC,uBADF,EAEEC,2BAFF,QAGO,aAHP;AAIA,SAASC,wBAAT,EAAmCC,eAAnC,QAA0D,WAA1D;AAEA,SAASC,WAAT,QAA4B,oDAA5B;AAEA,SAASC,aAAT,QAA8B,6DAA9B;AACA,OAAOC,uBAAP,MAAoC,wDAApC;AACA,SAASC,gBAAT,QAAiC,iBAAjC;AAEA,eAAe,SAASC,kBAAT,GAA8B;AAAA;;AAC3C,QAAMC,IAAI,GAAGV,WAAW,CAACC,uBAAD,CAAxB;AACA,QAAMU,QAAQ,GAAGX,WAAW,CAACE,2BAAD,CAA5B;AACA,QAAMU,QAAQ,GAAGb,WAAW,EAA5B;;AAEA,QAAMc,WAAW,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,QAAQ,CAACR,eAAe,EAAhB,CAAR;AACD,GAHD;;AAKA,QAAMY,YAAY,GAAIF,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,QAAQ,CAACJ,gBAAgB,EAAjB,CAAR;AACD,GAHD;;AAKA,QAAMS,eAAe,GAAIH,CAAD,IAAO;AAC7BA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,QAAQ,CAACT,wBAAwB,CAACW,CAAC,CAACI,MAAF,CAASC,KAAV,CAAzB,CAAR;AACD,GAHD;;AAKA,sBACE,QAAC,WAAD;AAAa,IAAA,MAAM,EAAET,IAArB;AAAA,4BACE,QAAC,uBAAD;AACE,MAAA,eAAe,EAAEO,eADnB;AAEE,MAAA,KAAK,EAAEN,QAAF,aAAEA,QAAF,cAAEA,QAAF,GAAc;AAFrB;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,aAAD;AAAe,MAAA,SAAS,EAAC,eAAzB;AAAyC,MAAA,OAAO,EAAEK,YAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GA/BuBP,kB;UACTT,W,EACIA,W,EACAD,W;;;KAHKU,kB","sourcesContent":["import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  userConfig_OpenSelector,\r\n  userConfig_NicknameSelector,\r\n} from './selectors';\r\nimport { changeNicknameInputValue, closeUserConfig } from './actions';\r\n\r\nimport { StyledModal } from '../../components/Global/Modal/ModalStyles.elements';\r\n\r\nimport { SuccessButton } from '../../components/CreateChannel/CreateChannelStyles.elements';\r\nimport CreateChannelModalInput from '../../components/CreateChannel/CreateChannelModalInput';\r\nimport { signupAgainstAPI } from '../Auth/actions';\r\n\r\nexport default function UserConfigurations() {\r\n  const open = useSelector(userConfig_OpenSelector);\r\n  const nickname = useSelector(userConfig_NicknameSelector);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClose = (e) => {\r\n    e.preventDefault();\r\n    dispatch(closeUserConfig());\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(signupAgainstAPI());\r\n  };\r\n\r\n  const onChangeHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(changeNicknameInputValue(e.target.value));\r\n  };\r\n\r\n  return (\r\n    <StyledModal isOpen={open}>\r\n      <CreateChannelModalInput\r\n        onChangeHandler={onChangeHandler}\r\n        value={nickname ?? ''}\r\n      />\r\n      <SuccessButton className='successButton' onClick={handleSubmit}>\r\n        Submit\r\n      </SuccessButton>\r\n    </StyledModal>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}