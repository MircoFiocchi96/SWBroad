{"ast":null,"code":"import * as msal from '@azure/msal-browser';\nimport { msalConfig, msalScopes } from '../config/msal';\n\nclass MsalAuthProvider {\n  constructor() {\n    this.authInstance = new msal.PublicClientApplication(msalConfig);\n  }\n\n  async handleRedirect() {\n    var _this$myAccounts$, _this$myAccounts$2;\n\n    const response = await this.authInstance.handleRedirectPromise();\n    if (response) this.myAccounts = this.authInstance.getAllAccounts();\n    return response ? {\n      accessToken: response.accessToken,\n      name: (_this$myAccounts$ = this.myAccounts[0]) === null || _this$myAccounts$ === void 0 ? void 0 : _this$myAccounts$.name,\n      email: (_this$myAccounts$2 = this.myAccounts[0]) === null || _this$myAccounts$2 === void 0 ? void 0 : _this$myAccounts$2.username\n    } : null;\n  }\n\n  async loginRedirect() {\n    await this.authInstance.loginRedirect(msalScopes);\n  }\n\n  async logout() {\n    await this.authInstance.logout();\n  }\n\n}\n\nexport default MsalAuthProvider;","map":{"version":3,"sources":["C:/Users/MircoFiocchi/Desktop/BroadcastApp/client/src/utils/authProvider.js"],"names":["msal","msalConfig","msalScopes","MsalAuthProvider","constructor","authInstance","PublicClientApplication","handleRedirect","response","handleRedirectPromise","myAccounts","getAllAccounts","accessToken","name","email","username","loginRedirect","logout"],"mappings":"AAAA,OAAO,KAAKA,IAAZ,MAAsB,qBAAtB;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,gBAAvC;;AAEA,MAAMC,gBAAN,CAAuB;AAKrBC,EAAAA,WAAW,GAAG;AACZ,SAAKC,YAAL,GAAoB,IAAIL,IAAI,CAACM,uBAAT,CAAiCL,UAAjC,CAApB;AACD;;AAED,QAAMM,cAAN,GAAuB;AAAA;;AACrB,UAAMC,QAAQ,GAAG,MAAM,KAAKH,YAAL,CAAkBI,qBAAlB,EAAvB;AACA,QAAID,QAAJ,EAAc,KAAKE,UAAL,GAAkB,KAAKL,YAAL,CAAkBM,cAAlB,EAAlB;AACd,WAAOH,QAAQ,GACX;AACEI,MAAAA,WAAW,EAAEJ,QAAQ,CAACI,WADxB;AAEEC,MAAAA,IAAI,uBAAE,KAAKH,UAAL,CAAgB,CAAhB,CAAF,sDAAE,kBAAoBG,IAF5B;AAGEC,MAAAA,KAAK,wBAAE,KAAKJ,UAAL,CAAgB,CAAhB,CAAF,uDAAE,mBAAoBK;AAH7B,KADW,GAMX,IANJ;AAOD;;AAED,QAAMC,aAAN,GAAsB;AACpB,UAAM,KAAKX,YAAL,CAAkBW,aAAlB,CAAgCd,UAAhC,CAAN;AACD;;AAED,QAAMe,MAAN,GAAe;AACb,UAAM,KAAKZ,YAAL,CAAkBY,MAAlB,EAAN;AACD;;AA3BoB;;AA8BvB,eAAed,gBAAf","sourcesContent":["import * as msal from '@azure/msal-browser';\r\nimport { msalConfig, msalScopes } from '../config/msal';\r\n\r\nclass MsalAuthProvider {\r\n  authInstance;\r\n  token;\r\n  myAccounts;\r\n\r\n  constructor() {\r\n    this.authInstance = new msal.PublicClientApplication(msalConfig);\r\n  }\r\n\r\n  async handleRedirect() {\r\n    const response = await this.authInstance.handleRedirectPromise();\r\n    if (response) this.myAccounts = this.authInstance.getAllAccounts();\r\n    return response\r\n      ? {\r\n          accessToken: response.accessToken,\r\n          name: this.myAccounts[0]?.name,\r\n          email: this.myAccounts[0]?.username,\r\n        }\r\n      : null;\r\n  }\r\n\r\n  async loginRedirect() {\r\n    await this.authInstance.loginRedirect(msalScopes);\r\n  }\r\n\r\n  async logout() {\r\n    await this.authInstance.logout();\r\n  }\r\n}\r\n\r\nexport default MsalAuthProvider;\r\n"]},"metadata":{},"sourceType":"module"}