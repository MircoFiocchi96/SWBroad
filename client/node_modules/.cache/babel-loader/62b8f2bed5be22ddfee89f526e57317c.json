{"ast":null,"code":"import produce from 'immer';\nimport { HOST_CONNECTED, HOST_DISCONNECTED } from '../App/constants';\nimport { FETCH_STREAM, FETCH_STREAM_SUCCESS, VIEWERS_UPDATE } from './constants';\nexport const initialState = {\n  started: false,\n  viewers: []\n};\n/* eslint-disable default-case, no-param-reassign */\n\nconst streamViewReducer = (state = initialState, action) => produce(state, draft => {\n  switch (action.type) {\n    case HOST_CONNECTED:\n      draft.started = true;\n      break;\n\n    case HOST_DISCONNECTED:\n      draft.started = false;\n      break;\n\n    case FETCH_STREAM:\n      break;\n\n    case FETCH_STREAM_SUCCESS:\n      draft.viewers = action.payload.viewers.filter(v => !v.endDate).map(s => s.name); //console.log('Payload: ', action.payload);\n\n      break;\n\n    case VIEWERS_UPDATE:\n      if (action.payload.connection) {\n        draft.viewers = state.viewers ? [action.payload.name, ...state.viewers] : [action.payload.name];\n        console.log('Reducer connection...', draft.viewers);\n      } else {\n        draft.viewers = state.viewers ? state.viewers.filter(v => v !== action.payload.name) : [];\n        console.log('Reducer disconnection...');\n      }\n\n  }\n});\n\nexport default streamViewReducer;","map":{"version":3,"sources":["C:/Users/MircoFiocchi/Desktop/BroadcastApp/client/src/containers/StreamView/reducer.js"],"names":["produce","HOST_CONNECTED","HOST_DISCONNECTED","FETCH_STREAM","FETCH_STREAM_SUCCESS","VIEWERS_UPDATE","initialState","started","viewers","streamViewReducer","state","action","draft","type","payload","filter","v","endDate","map","s","name","connection","console","log"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,OAApB;AACA,SAASC,cAAT,EAAyBC,iBAAzB,QAAkD,kBAAlD;AACA,SAASC,YAAT,EAAuBC,oBAAvB,EAA6CC,cAA7C,QAAmE,aAAnE;AAEA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,OAAO,EAAE,KADiB;AAE1BC,EAAAA,OAAO,EAAE;AAFiB,CAArB;AAKP;;AACA,MAAMC,iBAAiB,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KACxBX,OAAO,CAACU,KAAD,EAASE,KAAD,IAAW;AACxB,UAAQD,MAAM,CAACE,IAAf;AACE,SAAKZ,cAAL;AACEW,MAAAA,KAAK,CAACL,OAAN,GAAgB,IAAhB;AACA;;AACF,SAAKL,iBAAL;AACEU,MAAAA,KAAK,CAACL,OAAN,GAAgB,KAAhB;AACA;;AACF,SAAKJ,YAAL;AACE;;AACF,SAAKC,oBAAL;AACEQ,MAAAA,KAAK,CAACJ,OAAN,GAAgBG,MAAM,CAACG,OAAP,CAAeN,OAAf,CAAuBO,MAAvB,CAA8BC,CAAC,IAAI,CAACA,CAAC,CAACC,OAAtC,EAA+CC,GAA/C,CAAmDC,CAAC,IAAIA,CAAC,CAACC,IAA1D,CAAhB,CADF,CAEE;;AACA;;AACF,SAAKf,cAAL;AACE,UAAGM,MAAM,CAACG,OAAP,CAAeO,UAAlB,EAA6B;AAC3BT,QAAAA,KAAK,CAACJ,OAAN,GAAgBE,KAAK,CAACF,OAAN,GAAgB,CAAEG,MAAM,CAACG,OAAP,CAAeM,IAAjB,EAAuB,GAAGV,KAAK,CAACF,OAAhC,CAAhB,GAA4D,CAACG,MAAM,CAACG,OAAP,CAAeM,IAAhB,CAA5E;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCX,KAAK,CAACJ,OAA3C;AACD,OAHD,MAGO;AACLI,QAAAA,KAAK,CAACJ,OAAN,GAAgBE,KAAK,CAACF,OAAN,GAAgBE,KAAK,CAACF,OAAN,CAAcO,MAAd,CAAqBC,CAAC,IAAIA,CAAC,KAAKL,MAAM,CAACG,OAAP,CAAeM,IAA/C,CAAhB,GAAuE,EAAvF;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACD;;AApBL;AAsBD,CAvBM,CADT;;AA0BA,eAAed,iBAAf","sourcesContent":["import produce from 'immer';\r\nimport { HOST_CONNECTED, HOST_DISCONNECTED } from '../App/constants';\r\nimport { FETCH_STREAM, FETCH_STREAM_SUCCESS, VIEWERS_UPDATE } from './constants';\r\n\r\nexport const initialState = {\r\n  started: false,\r\n  viewers: [],\r\n};\r\n\r\n/* eslint-disable default-case, no-param-reassign */\r\nconst streamViewReducer = (state = initialState, action) =>\r\n  produce(state, (draft) => {\r\n    switch (action.type) {\r\n      case HOST_CONNECTED:\r\n        draft.started = true;\r\n        break;\r\n      case HOST_DISCONNECTED:\r\n        draft.started = false;\r\n        break;\r\n      case FETCH_STREAM:\r\n        break;\r\n      case FETCH_STREAM_SUCCESS:\r\n        draft.viewers = action.payload.viewers.filter(v => !v.endDate).map(s => s.name);\r\n        //console.log('Payload: ', action.payload);\r\n        break;\r\n      case VIEWERS_UPDATE:\r\n        if(action.payload.connection){\r\n          draft.viewers = state.viewers ? [ action.payload.name, ...state.viewers ] : [action.payload.name];\r\n          console.log('Reducer connection...', draft.viewers);\r\n        } else {\r\n          draft.viewers = state.viewers ? state.viewers.filter(v => v !== action.payload.name) : [];\r\n          console.log('Reducer disconnection...')\r\n        }\r\n    }\r\n  });\r\n\r\nexport default streamViewReducer;\r\n"]},"metadata":{},"sourceType":"module"}