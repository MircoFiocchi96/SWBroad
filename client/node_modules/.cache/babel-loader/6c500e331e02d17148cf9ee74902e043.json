{"ast":null,"code":"import { takeLatest, put, select } from 'redux-saga/effects';\nimport { FETCH_CATEGORIES, IS_LIKE_CATEGORY } from './constants';\nimport { fetchCategoriesSuccess } from './actions';\nimport * as categoriesApi from '../../api/categories';\nimport { Auth_NicknameSelector, Auth_AccessTokenSelector } from '../Auth/selectors';\nexport default function* categoryListSaga() {\n  yield takeLatest(FETCH_CATEGORIES, fetchCategories);\n}\nexport function* fetchCategories() {\n  try {\n    const nicknameSelector = yield select(Auth_NicknameSelector);\n    const categories = yield categoriesApi.get(nicknameSelector);\n    yield put(fetchCategoriesSuccess(categories));\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport function* setLikeCategory() {\n  yield takeLatest(IS_LIKE_CATEGORY, pathLikeCategory);\n}\nexport function* pathLikeCategory(actions) {\n  const nicknameSelector = yield select(Auth_NicknameSelector);\n  const tokenSelector = yield select(Auth_AccessTokenSelector);\n  const data = { ...actions.payload,\n    nickname: nicknameSelector,\n    token: tokenSelector\n  };\n\n  try {\n    yield categoriesApi.patch(data); //yield put(fetchCategories());\n  } catch (error) {\n    console.error(error);\n  }\n}","map":{"version":3,"sources":["C:/Users/MircoFiocchi/Desktop/BroadcastApp/client/src/containers/SideBar/saga.js"],"names":["takeLatest","put","select","FETCH_CATEGORIES","IS_LIKE_CATEGORY","fetchCategoriesSuccess","categoriesApi","Auth_NicknameSelector","Auth_AccessTokenSelector","categoryListSaga","fetchCategories","nicknameSelector","categories","get","error","console","setLikeCategory","pathLikeCategory","actions","tokenSelector","data","payload","nickname","token","patch"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,MAA1B,QAAwC,oBAAxC;AACA,SAASC,gBAAT,EAA2BC,gBAA3B,QAAmD,aAAnD;AACA,SAASC,sBAAT,QAAuC,WAAvC;AACA,OAAO,KAAKC,aAAZ,MAA+B,sBAA/B;AACA,SACEC,qBADF,EAEEC,wBAFF,QAGO,mBAHP;AAKA,eAAe,UAAUC,gBAAV,GAA6B;AAC1C,QAAMT,UAAU,CAACG,gBAAD,EAAmBO,eAAnB,CAAhB;AACD;AAED,OAAO,UAAUA,eAAV,GAA4B;AACjC,MAAI;AACF,UAAMC,gBAAgB,GAAG,MAAMT,MAAM,CAACK,qBAAD,CAArC;AACA,UAAMK,UAAU,GAAG,MAAMN,aAAa,CAACO,GAAd,CAAkBF,gBAAlB,CAAzB;AACA,UAAMV,GAAG,CAACI,sBAAsB,CAACO,UAAD,CAAvB,CAAT;AACD,GAJD,CAIE,OAAOE,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD;AACF;AAED,OAAO,UAAUE,eAAV,GAA4B;AACjC,QAAMhB,UAAU,CAACI,gBAAD,EAAmBa,gBAAnB,CAAhB;AACD;AAED,OAAO,UAAUA,gBAAV,CAA2BC,OAA3B,EAAoC;AACzC,QAAMP,gBAAgB,GAAG,MAAMT,MAAM,CAACK,qBAAD,CAArC;AACA,QAAMY,aAAa,GAAG,MAAMjB,MAAM,CAACM,wBAAD,CAAlC;AACA,QAAMY,IAAI,GAAG,EACX,GAAGF,OAAO,CAACG,OADA;AAEXC,IAAAA,QAAQ,EAAEX,gBAFC;AAGXY,IAAAA,KAAK,EAAEJ;AAHI,GAAb;;AAKA,MAAI;AACF,UAAMb,aAAa,CAACkB,KAAd,CAAoBJ,IAApB,CAAN,CADE,CAEF;AACD,GAHD,CAGE,OAAON,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACD;AACF","sourcesContent":["import { takeLatest, put, select } from 'redux-saga/effects';\r\nimport { FETCH_CATEGORIES, IS_LIKE_CATEGORY } from './constants';\r\nimport { fetchCategoriesSuccess } from './actions';\r\nimport * as categoriesApi from '../../api/categories';\r\nimport {\r\n  Auth_NicknameSelector,\r\n  Auth_AccessTokenSelector,\r\n} from '../Auth/selectors';\r\n\r\nexport default function* categoryListSaga() {\r\n  yield takeLatest(FETCH_CATEGORIES, fetchCategories);\r\n}\r\n\r\nexport function* fetchCategories() {\r\n  try {\r\n    const nicknameSelector = yield select(Auth_NicknameSelector);\r\n    const categories = yield categoriesApi.get(nicknameSelector);\r\n    yield put(fetchCategoriesSuccess(categories));\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n\r\nexport function* setLikeCategory() {\r\n  yield takeLatest(IS_LIKE_CATEGORY, pathLikeCategory);\r\n}\r\n\r\nexport function* pathLikeCategory(actions) {\r\n  const nicknameSelector = yield select(Auth_NicknameSelector);\r\n  const tokenSelector = yield select(Auth_AccessTokenSelector);\r\n  const data = {\r\n    ...actions.payload,\r\n    nickname: nicknameSelector,\r\n    token: tokenSelector,\r\n  };\r\n  try {\r\n    yield categoriesApi.patch(data);\r\n    //yield put(fetchCategories());\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}