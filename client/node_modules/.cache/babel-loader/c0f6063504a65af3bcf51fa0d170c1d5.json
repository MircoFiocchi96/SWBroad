{"ast":null,"code":"import axiosInstance from '../../utils/api';\n\nconst successCallback = response => {\n  return response;\n};\n\nconst errorCallbackDefault = error => {\n  return error;\n};\n\nexport async function post(DTO, callback = successCallback, errorCallback = errorCallbackDefault) {\n  const request = await axiosInstance.post('/streams', DTO);\n  return request.then(callback, errorCallback);\n}\nexport async function addViewer({\n  connectionId,\n  token,\n  nickname,\n  name\n}, callback = successCallback, errorCallback = errorCallbackDefault) {\n  axiosInstance.interceptors.request.use(function (config) {\n    config.headers.Authorization = token ? `Bearer ${token}` : \"\";\n    return config;\n  });\n  const request = await axiosInstance.post(`/streams/addViewer`, {\n    connectionId: connectionId,\n    nickname: nickname,\n    name: name\n  }).then(callback, errorCallback);\n  return request;\n}","map":{"version":3,"sources":["C:/Users/MircoFiocchi/Desktop/BroadcastApp/client/src/api/streams/post.js"],"names":["axiosInstance","successCallback","response","errorCallbackDefault","error","post","DTO","callback","errorCallback","request","then","addViewer","connectionId","token","nickname","name","interceptors","use","config","headers","Authorization"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,eAAe,GAAIC,QAAD,IAAc;AACpC,SAAOA,QAAP;AACD,CAFD;;AAIA,MAAMC,oBAAoB,GAAIC,KAAD,IAAW;AACtC,SAAOA,KAAP;AACD,CAFD;;AAIA,OAAO,eAAeC,IAAf,CACLC,GADK,EAELC,QAAQ,GAAGN,eAFN,EAGLO,aAAa,GAAGL,oBAHX,EAIL;AACA,QAAMM,OAAO,GAAG,MAAMT,aAAa,CAACK,IAAd,CAAmB,UAAnB,EAA+BC,GAA/B,CAAtB;AACA,SAAOG,OAAO,CAACC,IAAR,CAAaH,QAAb,EAAuBC,aAAvB,CAAP;AACD;AAED,OAAO,eAAeG,SAAf,CACL;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA,KAAhB;AAAuBC,EAAAA,QAAvB;AAAiCC,EAAAA;AAAjC,CADK,EAELR,QAAQ,GAAGN,eAFN,EAGLO,aAAa,GAAGL,oBAHX,EAIL;AACAH,EAAAA,aAAa,CAACgB,YAAd,CAA2BP,OAA3B,CAAmCQ,GAAnC,CAAuC,UAAUC,MAAV,EAAkB;AACvDA,IAAAA,MAAM,CAACC,OAAP,CAAeC,aAAf,GAA+BP,KAAK,GAAI,UAASA,KAAM,EAAnB,GAAuB,EAA3D;AACA,WAAOK,MAAP;AACD,GAHD;AAKA,QAAMT,OAAO,GAAG,MAAMT,aAAa,CAChCK,IADmB,CACb,oBADa,EACQ;AAC1BO,IAAAA,YAAY,EAAEA,YADY;AAE1BE,IAAAA,QAAQ,EAAEA,QAFgB;AAG1BC,IAAAA,IAAI,EAAEA;AAHoB,GADR,EAMnBL,IANmB,CAMdH,QANc,EAMJC,aANI,CAAtB;AAOA,SAAOC,OAAP;AACD","sourcesContent":["import axiosInstance from '../../utils/api';\r\n\r\nconst successCallback = (response) => {\r\n  return response;\r\n};\r\n\r\nconst errorCallbackDefault = (error) => {\r\n  return error;\r\n};\r\n\r\nexport async function post(\r\n  DTO,\r\n  callback = successCallback,\r\n  errorCallback = errorCallbackDefault\r\n) {\r\n  const request = await axiosInstance.post('/streams', DTO);\r\n  return request.then(callback, errorCallback);\r\n}\r\n\r\nexport async function addViewer(\r\n  { connectionId, token, nickname, name },\r\n  callback = successCallback,\r\n  errorCallback = errorCallbackDefault\r\n) {\r\n  axiosInstance.interceptors.request.use(function (config) {\r\n    config.headers.Authorization = token ? `Bearer ${token}` : \"\";\r\n    return config;\r\n  });\r\n\r\n  const request = await axiosInstance\r\n    .post(`/streams/addViewer`, {\r\n      connectionId: connectionId,\r\n      nickname: nickname,\r\n      name: name,\r\n    })\r\n    .then(callback, errorCallback);\r\n  return request;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}