{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\MircoFiocchi\\\\Desktop\\\\BroadcastApp\\\\client\\\\src\\\\containers\\\\StreamsList\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchStreams } from './actions';\nimport ChannelCard from '../../components/Global/Card';\nimport { StreamsList_ListSelector, StreamsList_LoadingSelector } from './selectors';\nimport Loading from '../../components/Global/Loading';\nexport default function StreamsList() {\n  _s();\n\n  const dispatch = useDispatch();\n  const streams = useSelector(StreamsList_ListSelector);\n  const isLoading = useSelector(StreamsList_LoadingSelector);\n  useEffect(() => {\n    dispatch(fetchStreams({}));\n  }, []);\n  console.log(streams);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: streams.data && streams.data.map(e => {\n        var _e$streams;\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: e.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: (_e$streams = e.streams) === null || _e$streams === void 0 ? void 0 : _e$streams.map(s => /*#__PURE__*/_jsxDEV(ChannelCard, {\n              streams: s\n            }, s.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 17\n          }, this)]\n        }, e.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n\n_s(StreamsList, \"Tt6iwvkrKtnx21podXvGofLS2w8=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = StreamsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"StreamsList\");","map":{"version":3,"sources":["C:/Users/MircoFiocchi/Desktop/BroadcastApp/client/src/containers/StreamsList/index.js"],"names":["React","useEffect","useDispatch","useSelector","fetchStreams","ChannelCard","StreamsList_ListSelector","StreamsList_LoadingSelector","Loading","StreamsList","dispatch","streams","isLoading","console","log","data","map","e","category","s","id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SACEC,wBADF,EAEEC,2BAFF,QAGO,aAHP;AAIA,OAAOC,OAAP,MAAoB,iCAApB;AAEA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AACpC,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,OAAO,GAAGR,WAAW,CAACG,wBAAD,CAA3B;AACA,QAAMM,SAAS,GAAGT,WAAW,CAACI,2BAAD,CAA7B;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,QAAQ,CAACN,YAAY,CAAC,EAAD,CAAb,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;AAGAS,EAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACA,sBACE;AAAA,cACGC,SAAS,gBACR,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADQ,gBAGR;AAAA,gBACGD,OAAO,CAACI,IAAR,IACCJ,OAAO,CAACI,IAAR,CAAaC,GAAb,CAAkBC,CAAD;AAAA;;AAAA,4BACf;AAAA,kCACE;AAAA,sBAAKA,CAAC,CAACC;AAAP;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,oCACGD,CAAC,CAACN,OADL,+CACG,WAAWK,GAAX,CAAgBG,CAAD,iBACd,QAAC,WAAD;AAAwB,cAAA,OAAO,EAAEA;AAAjC,eAAkBA,CAAC,CAACC,EAApB;AAAA;AAAA;AAAA;AAAA,oBADD;AADH;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA,WAAUH,CAAC,CAACG,EAAZ;AAAA;AAAA;AAAA;AAAA,gBADe;AAAA,OAAjB;AAFJ;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GA9BuBX,W;UACLP,W,EACDC,W,EACEA,W;;;KAHIM,W","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchStreams } from './actions';\r\nimport ChannelCard from '../../components/Global/Card';\r\nimport {\r\n  StreamsList_ListSelector,\r\n  StreamsList_LoadingSelector,\r\n} from './selectors';\r\nimport Loading from '../../components/Global/Loading';\r\n\r\nexport default function StreamsList() {\r\n  const dispatch = useDispatch();\r\n  const streams = useSelector(StreamsList_ListSelector);\r\n  const isLoading = useSelector(StreamsList_LoadingSelector);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchStreams({}));\r\n  }, []);\r\n  console.log(streams);\r\n  return (\r\n    <div>\r\n      {isLoading ? (\r\n        <Loading />\r\n      ) : (\r\n        <div>\r\n          {streams.data &&\r\n            streams.data.map((e) => (\r\n              <div key={e.id}>\r\n                <h1>{e.category}</h1>\r\n                <div>\r\n                  {e.streams?.map((s) => (\r\n                    <ChannelCard key={s.id} streams={s}></ChannelCard>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}