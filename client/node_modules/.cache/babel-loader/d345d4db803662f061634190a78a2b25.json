{"ast":null,"code":"import axiosInstance from '../../utils/api';\n\nconst successCallback = response => {\n  return response;\n};\n\nconst errorCallbackDefault = error => {\n  return error;\n};\n\nexport async function patch(data, callback = successCallback, errorCallback = errorCallbackDefault) {\n  axiosInstance.interceptors.request.use(function (config) {\n    config.headers.Authorization = token ? `Bearer ${token}` : '';\n    return config;\n  });\n  const url = `/users/${data.nickname}/categories/${data.category}`;\n  const request = await axiosInstance.patch(url, {\n    like: data.like\n  }).then(callback, errorCallback);\n  return request;\n}","map":{"version":3,"sources":["C:/Users/MircoFiocchi/Desktop/BroadcastApp/client/src/api/categories/patch.js"],"names":["axiosInstance","successCallback","response","errorCallbackDefault","error","patch","data","callback","errorCallback","interceptors","request","use","config","headers","Authorization","token","url","nickname","category","like","then"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,eAAe,GAAIC,QAAD,IAAc;AACpC,SAAOA,QAAP;AACD,CAFD;;AAIA,MAAMC,oBAAoB,GAAIC,KAAD,IAAW;AACtC,SAAOA,KAAP;AACD,CAFD;;AAIA,OAAO,eAAeC,KAAf,CACLC,IADK,EAELC,QAAQ,GAAGN,eAFN,EAGLO,aAAa,GAAGL,oBAHX,EAIL;AACAH,EAAAA,aAAa,CAACS,YAAd,CAA2BC,OAA3B,CAAmCC,GAAnC,CAAuC,UAAUC,MAAV,EAAkB;AACvDA,IAAAA,MAAM,CAACC,OAAP,CAAeC,aAAf,GAA+BC,KAAK,GAAI,UAASA,KAAM,EAAnB,GAAuB,EAA3D;AACA,WAAOH,MAAP;AACD,GAHD;AAIA,QAAMI,GAAG,GAAI,UAASV,IAAI,CAACW,QAAS,eAAcX,IAAI,CAACY,QAAS,EAAhE;AACA,QAAMR,OAAO,GAAG,MAAMV,aAAa,CAChCK,KADmB,CACbW,GADa,EACR;AAAEG,IAAAA,IAAI,EAAEb,IAAI,CAACa;AAAb,GADQ,EAEnBC,IAFmB,CAEdb,QAFc,EAEJC,aAFI,CAAtB;AAIA,SAAOE,OAAP;AACD","sourcesContent":["import axiosInstance from '../../utils/api';\r\n\r\nconst successCallback = (response) => {\r\n  return response;\r\n};\r\n\r\nconst errorCallbackDefault = (error) => {\r\n  return error;\r\n};\r\n\r\nexport async function patch(\r\n  data,\r\n  callback = successCallback,\r\n  errorCallback = errorCallbackDefault\r\n) {\r\n  axiosInstance.interceptors.request.use(function (config) {\r\n    config.headers.Authorization = token ? `Bearer ${token}` : '';\r\n    return config;\r\n  });\r\n  const url = `/users/${data.nickname}/categories/${data.category}`;\r\n  const request = await axiosInstance\r\n    .patch(url, { like: data.like })\r\n    .then(callback, errorCallback);\r\n\r\n  return request;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}