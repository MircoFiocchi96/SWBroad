{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\MircoFiocchi\\\\Desktop\\\\BroadcastApp\\\\client\\\\src\\\\containers\\\\StreamsList\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchStreams } from './actions';\nimport ChannelCard from '../../components/Global/Card';\nimport { StreamsList_ListSelector, StreamsList_LoadingSelector } from './selectors';\nimport Loading from '../../components/Global/Loading';\nexport default function StreamsList() {\n  _s();\n\n  const dispatch = useDispatch();\n  const streams = useSelector(StreamsList_ListSelector);\n  const isLoading = useSelector(StreamsList_LoadingSelector);\n  useEffect(() => {\n    dispatch(fetchStreams({}));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: isLoading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      children: streams && streams.map(e => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: e.category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(ChannelCard, {\n            streams: e.streams.slice(0, 5)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, this)]\n      }, e.category, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(StreamsList, \"Tt6iwvkrKtnx21podXvGofLS2w8=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = StreamsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"StreamsList\");","map":{"version":3,"sources":["C:/Users/MircoFiocchi/Desktop/BroadcastApp/client/src/containers/StreamsList/index.js"],"names":["React","useEffect","useDispatch","useSelector","fetchStreams","ChannelCard","StreamsList_ListSelector","StreamsList_LoadingSelector","Loading","StreamsList","dispatch","streams","isLoading","display","flexDirection","map","e","category","slice"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,SACEC,wBADF,EAEEC,2BAFF,QAGO,aAHP;AAIA,OAAOC,OAAP,MAAoB,iCAApB;AAEA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AACpC,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,OAAO,GAAGR,WAAW,CAACG,wBAAD,CAA3B;AACA,QAAMM,SAAS,GAAGT,WAAW,CAACI,2BAAD,CAA7B;AAEAN,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,QAAQ,CAACN,YAAY,CAAC,EAAD,CAAb,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;AAGA,sBACE;AAAA,cACGQ,SAAS,gBACR,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YADQ,gBAGR;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE,MAAX;AAAmBC,QAAAA,aAAa,EAAE;AAAlC,OAAZ;AAAA,gBACGH,OAAO,IACNA,OAAO,CAACI,GAAR,CAAaC,CAAD,iBACV;AAAA,gCACE;AAAA,oBAAKA,CAAC,CAACC;AAAP;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,iCACE,QAAC,WAAD;AAAa,YAAA,OAAO,EAAED,CAAC,CAACL,OAAF,CAAUO,KAAV,CAAgB,CAAhB,EAAmB,CAAnB;AAAtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,SAAUF,CAAC,CAACC,QAAZ;AAAA;AAAA;AAAA;AAAA,cADF;AAFJ;AAAA;AAAA;AAAA;AAAA;AAJJ,mBADF;AAmBD;;GA3BuBR,W;UACLP,W,EACDC,W,EACEA,W;;;KAHIM,W","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchStreams } from './actions';\r\nimport ChannelCard from '../../components/Global/Card';\r\nimport {\r\n  StreamsList_ListSelector,\r\n  StreamsList_LoadingSelector,\r\n} from './selectors';\r\nimport Loading from '../../components/Global/Loading';\r\n\r\nexport default function StreamsList() {\r\n  const dispatch = useDispatch();\r\n  const streams = useSelector(StreamsList_ListSelector);\r\n  const isLoading = useSelector(StreamsList_LoadingSelector);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchStreams({}));\r\n  }, []);\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        <Loading />\r\n      ) : (\r\n        <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n          {streams &&\r\n            streams.map((e) => (\r\n              <div key={e.category}>\r\n                <h1>{e.category}</h1>\r\n                <div>\r\n                  <ChannelCard streams={e.streams.slice(0, 5)}></ChannelCard>\r\n                </div>\r\n              </div>\r\n            ))}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}