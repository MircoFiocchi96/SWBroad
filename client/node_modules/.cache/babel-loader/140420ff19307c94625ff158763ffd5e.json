{"ast":null,"code":"import axiosInstance from '../../utils/api';\nimport streamQuery from '../DTOs/streamQuery/streamQuery';\nimport { generateQueryString } from '../utils/generateQueryString';\n\nconst successCallback = response => {\n  return response.data.data;\n};\n\nconst errorCallbackDefault = error => {\n  return [];\n};\n\nexport async function get(data, callback = successCallback, errorCallback = errorCallbackDefault) {\n  const query = new streamQuery(data);\n  const queryString = generateQueryString(query);\n  const url = queryString ? `/streams/${queryString}` : `/streams/`;\n  const request = await axiosInstance.get(url).then(callback, errorCallback);\n  return request;\n}","map":{"version":3,"sources":["C:/Users/MircoFiocchi/Desktop/BroadcastApp/client/src/api/streams/get.js"],"names":["axiosInstance","streamQuery","generateQueryString","successCallback","response","data","errorCallbackDefault","error","get","callback","errorCallback","query","queryString","url","request","then"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,iBAA1B;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,SAASC,mBAAT,QAAoC,8BAApC;;AAEA,MAAMC,eAAe,GAAIC,QAAD,IAAc;AACpC,SAAOA,QAAQ,CAACC,IAAT,CAAcA,IAArB;AACD,CAFD;;AAIA,MAAMC,oBAAoB,GAAIC,KAAD,IAAW;AACtC,SAAO,EAAP;AACD,CAFD;;AAIA,OAAO,eAAeC,GAAf,CACLH,IADK,EAELI,QAAQ,GAAGN,eAFN,EAGLO,aAAa,GAAGJ,oBAHX,EAIL;AACA,QAAMK,KAAK,GAAG,IAAIV,WAAJ,CAAgBI,IAAhB,CAAd;AACA,QAAMO,WAAW,GAAGV,mBAAmB,CAACS,KAAD,CAAvC;AACA,QAAME,GAAG,GAAGD,WAAW,GAAI,YAAWA,WAAY,EAA3B,GAAgC,WAAvD;AACA,QAAME,OAAO,GAAG,MAAMd,aAAa,CAACQ,GAAd,CAAkBK,GAAlB,EAAuBE,IAAvB,CAA4BN,QAA5B,EAAsCC,aAAtC,CAAtB;AAEA,SAAOI,OAAP;AACD","sourcesContent":["import axiosInstance from '../../utils/api';\r\nimport streamQuery from '../DTOs/streamQuery/streamQuery';\r\nimport { generateQueryString } from '../utils/generateQueryString';\r\n\r\nconst successCallback = (response) => {\r\n  return response.data.data;\r\n};\r\n\r\nconst errorCallbackDefault = (error) => {\r\n  return [];\r\n};\r\n\r\nexport async function get(\r\n  data,\r\n  callback = successCallback,\r\n  errorCallback = errorCallbackDefault\r\n) {\r\n  const query = new streamQuery(data);\r\n  const queryString = generateQueryString(query);\r\n  const url = queryString ? `/streams/${queryString}` : `/streams/`;\r\n  const request = await axiosInstance.get(url).then(callback, errorCallback);\r\n\r\n  return request;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}