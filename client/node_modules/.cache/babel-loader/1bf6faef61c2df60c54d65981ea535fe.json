{"ast":null,"code":"import axiosInstance from '../../utils/api';\n\nconst successCallback = response => {\n  return response;\n};\n\nconst errorCallbackDefault = error => {\n  return error;\n};\n\nexport async function post(DTO, callback = successCallback, errorCallback = errorCallbackDefault) {\n  const request = await axiosInstance.post('/streams', DTO).then(callback, errorCallback);\n  return request;\n}\nexport async function addViewer({\n  connectionId,\n  token,\n  nickname,\n  name,\n  publisher\n}, callback = successCallback, errorCallback = errorCallbackDefault) {\n  axiosInstance.interceptors.request.use(function (config) {\n    config.headers.Authorization = token ? `Bearer ${token}` : \"\";\n    return config;\n  });\n  const request = await axiosInstance.post(`/streams/addViewer`, {\n    connectionId: connectionId,\n    nickname: nickname,\n    name: name,\n    publisher: publisher\n  }).then(callback, errorCallback);\n  return request;\n}","map":{"version":3,"sources":["C:/Users/MircoFiocchi/Desktop/BroadcastApp/client/src/api/streams/post.js"],"names":["axiosInstance","successCallback","response","errorCallbackDefault","error","post","DTO","callback","errorCallback","request","then","addViewer","connectionId","token","nickname","name","publisher","interceptors","use","config","headers","Authorization"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,eAAe,GAAIC,QAAD,IAAc;AACpC,SAAOA,QAAP;AACD,CAFD;;AAIA,MAAMC,oBAAoB,GAAIC,KAAD,IAAW;AACtC,SAAOA,KAAP;AACD,CAFD;;AAIA,OAAO,eAAeC,IAAf,CACLC,GADK,EAELC,QAAQ,GAAGN,eAFN,EAGLO,aAAa,GAAGL,oBAHX,EAIL;AACA,QAAMM,OAAO,GAAG,MAAMT,aAAa,CAChCK,IADmB,CACd,UADc,EACFC,GADE,EAEnBI,IAFmB,CAEdH,QAFc,EAEJC,aAFI,CAAtB;AAGA,SAAOC,OAAP;AACD;AAED,OAAO,eAAeE,SAAf,CACL;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA,KAAhB;AAAuBC,EAAAA,QAAvB;AAAiCC,EAAAA,IAAjC;AAAuCC,EAAAA;AAAvC,CADK,EAELT,QAAQ,GAAGN,eAFN,EAGLO,aAAa,GAAGL,oBAHX,EAIL;AACAH,EAAAA,aAAa,CAACiB,YAAd,CAA2BR,OAA3B,CAAmCS,GAAnC,CAAuC,UAAUC,MAAV,EAAkB;AACvDA,IAAAA,MAAM,CAACC,OAAP,CAAeC,aAAf,GAA+BR,KAAK,GAAI,UAASA,KAAM,EAAnB,GAAuB,EAA3D;AACA,WAAOM,MAAP;AACD,GAHD;AAKA,QAAMV,OAAO,GAAG,MAAMT,aAAa,CAChCK,IADmB,CACb,oBADa,EACQ;AAC1BO,IAAAA,YAAY,EAAEA,YADY;AAE1BE,IAAAA,QAAQ,EAAEA,QAFgB;AAG1BC,IAAAA,IAAI,EAAEA,IAHoB;AAI1BC,IAAAA,SAAS,EAAEA;AAJe,GADR,EAOnBN,IAPmB,CAOdH,QAPc,EAOJC,aAPI,CAAtB;AAQA,SAAOC,OAAP;AACD","sourcesContent":["import axiosInstance from '../../utils/api';\r\n\r\nconst successCallback = (response) => {\r\n  return response;\r\n};\r\n\r\nconst errorCallbackDefault = (error) => {\r\n  return error;\r\n};\r\n\r\nexport async function post(\r\n  DTO,\r\n  callback = successCallback,\r\n  errorCallback = errorCallbackDefault\r\n) {\r\n  const request = await axiosInstance\r\n    .post('/streams', DTO)\r\n    .then(callback, errorCallback);\r\n  return request;\r\n}\r\n\r\nexport async function addViewer(\r\n  { connectionId, token, nickname, name, publisher },\r\n  callback = successCallback,\r\n  errorCallback = errorCallbackDefault\r\n) {\r\n  axiosInstance.interceptors.request.use(function (config) {\r\n    config.headers.Authorization = token ? `Bearer ${token}` : \"\";\r\n    return config;\r\n  });\r\n\r\n  const request = await axiosInstance\r\n    .post(`/streams/addViewer`, {\r\n      connectionId: connectionId,\r\n      nickname: nickname,\r\n      name: name,\r\n      publisher: publisher\r\n    })\r\n    .then(callback, errorCallback);\r\n  return request;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}