{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\MircoFiocchi\\\\Desktop\\\\BroadcastApp\\\\client\\\\src\\\\containers\\\\NavBar\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport NavBar from '../../components/NavBar';\nimport AnimatedButton from '../../components/Global/AnimatedButton';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { loadUserConfig } from '../UserConfigurations/actions';\nimport DropdownMenu from '../../components/NavBar/DropdownMenu';\nimport { Auth_AccessTokenSelector } from '../Auth/selectors';\nimport { App_LoadingSelector } from '../App/selectors';\nimport { userLogin, userLogout } from '../Auth/actions';\nimport { searchStreams } from '../StreamsList/actions';\nimport { fetchFavoriteStreams } from './actions';\nexport default function NavBarContainer() {\n  _s();\n\n  const dispatch = useDispatch();\n  const authenticated = useSelector(Auth_AccessTokenSelector);\n  const loading = useSelector(App_LoadingSelector);\n  const buttons = [];\n\n  if (!loading) {\n    buttons.push(getButtons(authenticated, dispatch));\n  }\n\n  return /*#__PURE__*/_jsxDEV(NavBar, {\n    buttons: buttons,\n    onSearch: text => dispatch(searchStreams({\n      q: text\n    }))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NavBarContainer, \"mFn2w3ylePVmrciv5OqFKlmj3pk=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = NavBarContainer;\n\nfunction getButtons(authenticated, dispatch) {\n  const buttons = [/*#__PURE__*/_jsxDEV(AnimatedButton, {\n    icon: \"\\uD83C\\uDFA5\",\n    onClick: () => dispatch(loadUserConfig()),\n    children: \"Start Stream\"\n  }, 'start-stream', false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this)];\n  buttons.push(authenticated ? /*#__PURE__*/_jsxDEV(DropdownMenu, {\n    myFavoriteCategory: () => dispatch(fetchFavoriteStreams({\n      favorite: true\n    })),\n    logout: () => dispatch(userLogout())\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(AnimatedButton, {\n    buttonColor: props => props.theme.Pink,\n    icon: \"\\uD83D\\uDE4B\\uD83C\\uDFFB\\u200D\\u2642\\uFE0F\",\n    onClick: () => dispatch(userLogin()),\n    children: \"Login\"\n  }, 'user-login', false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 7\n  }, this));\n  return buttons;\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"NavBarContainer\");","map":{"version":3,"sources":["C:/Users/MircoFiocchi/Desktop/BroadcastApp/client/src/containers/NavBar/index.js"],"names":["React","NavBar","AnimatedButton","useDispatch","useSelector","loadUserConfig","DropdownMenu","Auth_AccessTokenSelector","App_LoadingSelector","userLogin","userLogout","searchStreams","fetchFavoriteStreams","NavBarContainer","dispatch","authenticated","loading","buttons","push","getButtons","text","q","favorite","props","theme","Pink"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,cAAP,MAA2B,wCAA3B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,cAAT,QAA+B,+BAA/B;AACA,OAAOC,YAAP,MAAyB,sCAAzB;AACA,SAASC,wBAAT,QAAyC,mBAAzC;AACA,SAASC,mBAAT,QAAoC,kBAApC;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,iBAAtC;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAASC,oBAAT,QAAqC,WAArC;AAEA,eAAe,SAASC,eAAT,GAA2B;AAAA;;AACxC,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAMY,aAAa,GAAGX,WAAW,CAACG,wBAAD,CAAjC;AACA,QAAMS,OAAO,GAAGZ,WAAW,CAACI,mBAAD,CAA3B;AACA,QAAMS,OAAO,GAAG,EAAhB;;AACA,MAAI,CAACD,OAAL,EAAc;AACZC,IAAAA,OAAO,CAACC,IAAR,CAAaC,UAAU,CAACJ,aAAD,EAAgBD,QAAhB,CAAvB;AACD;;AAED,sBACE,QAAC,MAAD;AACE,IAAA,OAAO,EAAEG,OADX;AAEE,IAAA,QAAQ,EAAGG,IAAD,IAAUN,QAAQ,CAACH,aAAa,CAAC;AAAEU,MAAAA,CAAC,EAAED;AAAL,KAAD,CAAd;AAF9B;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAfuBP,e;UACLV,W,EACKC,W,EACNA,W;;;KAHMS,e;;AAiBxB,SAASM,UAAT,CAAoBJ,aAApB,EAAmCD,QAAnC,EAA6C;AAC3C,QAAMG,OAAO,GAAG,cACd,QAAC,cAAD;AACE,IAAA,IAAI,EAAC,cADP;AAGE,IAAA,OAAO,EAAE,MAAMH,QAAQ,CAACT,cAAc,EAAf,CAHzB;AAAA;AAAA,KAEM,cAFN;AAAA;AAAA;AAAA;AAAA,UADc,CAAhB;AAUAY,EAAAA,OAAO,CAACC,IAAR,CACEH,aAAa,gBACX,QAAC,YAAD;AACE,IAAA,kBAAkB,EAAE,MAClBD,QAAQ,CAACF,oBAAoB,CAAC;AAAEU,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAArB,CAFZ;AAIE,IAAA,MAAM,EAAE,MAAMR,QAAQ,CAACJ,UAAU,EAAX;AAJxB;AAAA;AAAA;AAAA;AAAA,UADW,gBAQX,QAAC,cAAD;AACE,IAAA,WAAW,EAAGa,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYC,IADtC;AAEE,IAAA,IAAI,EAAC,4CAFP;AAIE,IAAA,OAAO,EAAE,MAAMX,QAAQ,CAACL,SAAS,EAAV,CAJzB;AAAA;AAAA,KAGM,YAHN;AAAA;AAAA;AAAA;AAAA,UATJ;AAmBA,SAAOQ,OAAP;AACD","sourcesContent":["import React from 'react';\r\nimport NavBar from '../../components/NavBar';\r\nimport AnimatedButton from '../../components/Global/AnimatedButton';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { loadUserConfig } from '../UserConfigurations/actions';\r\nimport DropdownMenu from '../../components/NavBar/DropdownMenu';\r\nimport { Auth_AccessTokenSelector } from '../Auth/selectors';\r\nimport { App_LoadingSelector } from '../App/selectors';\r\nimport { userLogin, userLogout } from '../Auth/actions';\r\nimport { searchStreams } from '../StreamsList/actions';\r\nimport { fetchFavoriteStreams } from './actions';\r\n\r\nexport default function NavBarContainer() {\r\n  const dispatch = useDispatch();\r\n  const authenticated = useSelector(Auth_AccessTokenSelector);\r\n  const loading = useSelector(App_LoadingSelector);\r\n  const buttons = [];\r\n  if (!loading) {\r\n    buttons.push(getButtons(authenticated, dispatch));\r\n  }\r\n\r\n  return (\r\n    <NavBar\r\n      buttons={buttons}\r\n      onSearch={(text) => dispatch(searchStreams({ q: text }))}\r\n    ></NavBar>\r\n  );\r\n}\r\n\r\nfunction getButtons(authenticated, dispatch) {\r\n  const buttons = [\r\n    <AnimatedButton\r\n      icon='🎥'\r\n      key='start-stream'\r\n      onClick={() => dispatch(loadUserConfig())}\r\n    >\r\n      Start Stream\r\n    </AnimatedButton>,\r\n  ];\r\n\r\n  buttons.push(\r\n    authenticated ? (\r\n      <DropdownMenu\r\n        myFavoriteCategory={() =>\r\n          dispatch(fetchFavoriteStreams({ favorite: true }))\r\n        }\r\n        logout={() => dispatch(userLogout())}\r\n      />\r\n    ) : (\r\n      <AnimatedButton\r\n        buttonColor={(props) => props.theme.Pink}\r\n        icon='🙋🏻‍♂️'\r\n        key='user-login'\r\n        onClick={() => dispatch(userLogin())}\r\n      >\r\n        Login\r\n      </AnimatedButton>\r\n    )\r\n  );\r\n  return buttons;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}