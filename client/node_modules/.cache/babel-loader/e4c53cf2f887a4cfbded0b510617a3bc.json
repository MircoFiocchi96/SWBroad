{"ast":null,"code":"export const Red5ProConfig = {\n  host: 'hartwell-stream-manager.swrkstest.co',\n  protocol: 'wss',\n  port: 443,\n  app: 'streammanager',\n  nodeApp: 'live',\n  apiVersion: '4.0',\n  proxy: 'streammanager'\n};\nexport const STUNHost = 'stun:stun2.l.google.com:19302';\nexport const PublisherConfig = ({\n  streamName,\n  mediaElementId,\n  nodeData\n}) => ({ ...Red5ProConfig,\n  streamName,\n  streamMode: 'live',\n  mediaElementId,\n  bandwidth: {\n    audio: 56,\n    video: 512\n  },\n  connectionParams: {\n    host: nodeData.serverAddress,\n    app: nodeData.scope,\n    type: 'publisher',\n    nickname: streamName,\n    token: 'mytoken'\n  }\n});\n_c = PublisherConfig;\nexport const SubscriberConfig = ({\n  streamName,\n  mediaElementId,\n  nodeData\n}) => {\n  const subscriberId = streamName + Math.floor(Math.random() * 0x10000).toString(16);\n  return { ...Red5ProConfig,\n    streamName,\n    mediaElementId,\n    subscriptionId: subscriberId,\n    videoEncoding: 'NONE',\n    audioEncoding: 'NONE',\n    connectionParams: {\n      host: nodeData.hostname,\n      app: nodeData.scope,\n      type: 'subscriber',\n      nickname: streamName,\n      user: subscriberId,\n      token: 'mytoken'\n    }\n  };\n};\n_c2 = SubscriberConfig;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"PublisherConfig\");\n$RefreshReg$(_c2, \"SubscriberConfig\");","map":{"version":3,"sources":["C:/Users/MircoFiocchi/Desktop/BroadcastApp/client/src/config/red5Pro.js"],"names":["Red5ProConfig","host","protocol","port","app","nodeApp","apiVersion","proxy","STUNHost","PublisherConfig","streamName","mediaElementId","nodeData","streamMode","bandwidth","audio","video","connectionParams","serverAddress","scope","type","nickname","token","SubscriberConfig","subscriberId","Math","floor","random","toString","subscriptionId","videoEncoding","audioEncoding","hostname","user"],"mappings":"AAAA,OAAO,MAAMA,aAAa,GAAG;AAC3BC,EAAAA,IAAI,EAAE,sCADqB;AAE3BC,EAAAA,QAAQ,EAAE,KAFiB;AAG3BC,EAAAA,IAAI,EAAE,GAHqB;AAI3BC,EAAAA,GAAG,EAAE,eAJsB;AAK3BC,EAAAA,OAAO,EAAE,MALkB;AAM3BC,EAAAA,UAAU,EAAE,KANe;AAO3BC,EAAAA,KAAK,EAAE;AAPoB,CAAtB;AAUP,OAAO,MAAMC,QAAQ,GAAG,+BAAjB;AAEP,OAAO,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA,cAAd;AAA8BC,EAAAA;AAA9B,CAAD,MAA+C,EAC5E,GAAGZ,aADyE;AAE5EU,EAAAA,UAF4E;AAG5EG,EAAAA,UAAU,EAAE,MAHgE;AAI5EF,EAAAA,cAJ4E;AAK5EG,EAAAA,SAAS,EAAE;AACTC,IAAAA,KAAK,EAAE,EADE;AAETC,IAAAA,KAAK,EAAE;AAFE,GALiE;AAS5EC,EAAAA,gBAAgB,EAAE;AAChBhB,IAAAA,IAAI,EAAEW,QAAQ,CAACM,aADC;AAEhBd,IAAAA,GAAG,EAAEQ,QAAQ,CAACO,KAFE;AAGhBC,IAAAA,IAAI,EAAE,WAHU;AAIhBC,IAAAA,QAAQ,EAAEX,UAJM;AAKhBY,IAAAA,KAAK,EAAE;AALS;AAT0D,CAA/C,CAAxB;KAAMb,e;AAkBb,OAAO,MAAMc,gBAAgB,GAAG,CAAC;AAAEb,EAAAA,UAAF;AAAcC,EAAAA,cAAd;AAA8BC,EAAAA;AAA9B,CAAD,KAA8C;AAC5E,QAAMY,YAAY,GAChBd,UAAU,GAAGe,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,OAA3B,EAAoCC,QAApC,CAA6C,EAA7C,CADf;AAGA,SAAO,EACL,GAAG5B,aADE;AAELU,IAAAA,UAFK;AAGLC,IAAAA,cAHK;AAILkB,IAAAA,cAAc,EAAEL,YAJX;AAKLM,IAAAA,aAAa,EAAE,MALV;AAMLC,IAAAA,aAAa,EAAE,MANV;AAOLd,IAAAA,gBAAgB,EAAE;AAChBhB,MAAAA,IAAI,EAAEW,QAAQ,CAACoB,QADC;AAEhB5B,MAAAA,GAAG,EAAEQ,QAAQ,CAACO,KAFE;AAGhBC,MAAAA,IAAI,EAAE,YAHU;AAIhBC,MAAAA,QAAQ,EAAEX,UAJM;AAKhBuB,MAAAA,IAAI,EAAET,YALU;AAMhBF,MAAAA,KAAK,EAAE;AANS;AAPb,GAAP;AAgBD,CApBM;MAAMC,gB","sourcesContent":["export const Red5ProConfig = {\r\n  host: 'hartwell-stream-manager.swrkstest.co',\r\n  protocol: 'wss',\r\n  port: 443,\r\n  app: 'streammanager',\r\n  nodeApp: 'live',\r\n  apiVersion: '4.0',\r\n  proxy: 'streammanager',\r\n};\r\n\r\nexport const STUNHost = 'stun:stun2.l.google.com:19302';\r\n\r\nexport const PublisherConfig = ({ streamName, mediaElementId, nodeData }) => ({\r\n  ...Red5ProConfig,\r\n  streamName,\r\n  streamMode: 'live',\r\n  mediaElementId,\r\n  bandwidth: {\r\n    audio: 56,\r\n    video: 512,\r\n  },\r\n  connectionParams: {\r\n    host: nodeData.serverAddress,\r\n    app: nodeData.scope,\r\n    type: 'publisher',\r\n    nickname: streamName,\r\n    token: 'mytoken',\r\n  },\r\n});\r\n\r\nexport const SubscriberConfig = ({ streamName, mediaElementId, nodeData }) => {\r\n  const subscriberId =\r\n    streamName + Math.floor(Math.random() * 0x10000).toString(16);\r\n\r\n  return {\r\n    ...Red5ProConfig,\r\n    streamName,\r\n    mediaElementId,\r\n    subscriptionId: subscriberId,\r\n    videoEncoding: 'NONE',\r\n    audioEncoding: 'NONE',\r\n    connectionParams: {\r\n      host: nodeData.hostname,\r\n      app: nodeData.scope,\r\n      type: 'subscriber',\r\n      nickname: streamName,\r\n      user: subscriberId,\r\n      token: 'mytoken',\r\n    },\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}