{"ast":null,"code":"import { takeLatest, put, select } from 'redux-saga/effects';\nimport { HANDLE_LOGIN_REDIRECT, LOGIN_AGAINST_API, USER_LOGIN, USER_LOGOUT, SIGNUP_AGAINST_API } from './constants';\nimport { tokenAcquired, userUnauthenticated, loginAgainstAPI, loginAgainstAPISuccess, LoadSessionFromLocalStorage } from './actions';\nimport { authProvider } from '../../index';\nimport * as authApi from '../../api/auth';\nimport { loadUserConfig, saveUserConfigSuccess } from '../UserConfigurations/actions';\nimport { userConfig_NicknameSelector } from '../UserConfigurations/selectors';\nimport { Auth_AccessTokenSelector } from './selectors';\nimport { displayNotification } from '../Notifications/actions';\nexport default function* handleLoginSaga() {\n  yield takeLatest(HANDLE_LOGIN_REDIRECT, handleRedirect);\n  yield takeLatest(USER_LOGIN, login);\n  yield takeLatest(USER_LOGOUT, logout);\n  yield takeLatest(LOGIN_AGAINST_API, loginAPI);\n  yield takeLatest(SIGNUP_AGAINST_API, signupAPI);\n}\n\nfunction* handleRedirect() {\n  try {\n    const sessionData = yield authProvider.handleRedirect();\n\n    if (sessionData) {\n      yield put(tokenAcquired(sessionData));\n      yield put(loginAgainstAPI(sessionData.accessToken));\n    } else {\n      yield loadFromLocalStorage();\n    }\n  } catch (error) {\n    yield loadFromLocalStorage();\n  }\n}\n\nfunction* loadFromLocalStorage() {\n  const authState = JSON.parse(localStorage.getItem('auth'));\n\n  if (authState) {\n    yield put(LoadSessionFromLocalStorage(authState));\n  } else {\n    yield put(userUnauthenticated());\n  }\n}\n\nfunction* saveToLocalStorage() {\n  const authState = yield select(state => state.auth);\n  localStorage.setItem('auth', JSON.stringify(authState));\n}\n\nfunction* login() {\n  try {\n    yield authProvider.loginRedirect();\n  } catch (error) {\n    yield put(userUnauthenticated());\n  }\n}\n\nfunction* logout() {\n  try {\n    localStorage.clear('auth');\n    yield authProvider.logout();\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nfunction* loginAPI(action) {\n  try {\n    var _response$data;\n\n    const response = yield authApi.login(action.payload);\n\n    if ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.nickname) {\n      yield put(loginAgainstAPISuccess(response.data.nickname));\n      yield saveToLocalStorage();\n    } else {\n      yield put(loadUserConfig());\n    }\n  } catch (error) {\n    console.error(error);\n    yield put(userUnauthenticated());\n  }\n}\n\nfunction* signupAPI() {\n  const nickname = yield select(userConfig_NicknameSelector);\n  const token = yield select(Auth_AccessTokenSelector);\n\n  try {\n    const response = yield authApi.signup({\n      nickname,\n      token\n    });\n\n    if (response) {\n      yield put(loginAgainstAPISuccess(response.data.nickname));\n      yield put(saveUserConfigSuccess(response.data.nickname));\n      yield saveToLocalStorage();\n    } else {\n      yield put(displayNotification({\n        type: 'error',\n        message: 'Please choose a different nickame'\n      }));\n      yield put(loadUserConfig());\n    }\n  } catch (error) {\n    console.error(error);\n  }\n}","map":{"version":3,"sources":["C:/Users/MircoFiocchi/Desktop/BroadcastApp/client/src/containers/Auth/saga.js"],"names":["takeLatest","put","select","HANDLE_LOGIN_REDIRECT","LOGIN_AGAINST_API","USER_LOGIN","USER_LOGOUT","SIGNUP_AGAINST_API","tokenAcquired","userUnauthenticated","loginAgainstAPI","loginAgainstAPISuccess","LoadSessionFromLocalStorage","authProvider","authApi","loadUserConfig","saveUserConfigSuccess","userConfig_NicknameSelector","Auth_AccessTokenSelector","displayNotification","handleLoginSaga","handleRedirect","login","logout","loginAPI","signupAPI","sessionData","accessToken","loadFromLocalStorage","error","authState","JSON","parse","localStorage","getItem","saveToLocalStorage","state","auth","setItem","stringify","loginRedirect","clear","console","action","response","payload","data","nickname","token","signup","type","message"],"mappings":"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","sourcesContent":["import { takeLatest, put, select } from 'redux-saga/effects';\r\n\r\nimport {\r\n  HANDLE_LOGIN_REDIRECT,\r\n  LOGIN_AGAINST_API,\r\n  USER_LOGIN,\r\n  USER_LOGOUT,\r\n  SIGNUP_AGAINST_API,\r\n} from './constants';\r\nimport {\r\n  tokenAcquired,\r\n  userUnauthenticated,\r\n  loginAgainstAPI,\r\n  loginAgainstAPISuccess,\r\n  LoadSessionFromLocalStorage,\r\n} from './actions';\r\nimport { authProvider } from '../../index';\r\nimport * as authApi from '../../api/auth';\r\nimport {\r\n  loadUserConfig,\r\n  saveUserConfigSuccess,\r\n} from '../UserConfigurations/actions';\r\nimport { userConfig_NicknameSelector } from '../UserConfigurations/selectors';\r\nimport { Auth_AccessTokenSelector } from './selectors';\r\nimport { displayNotification } from '../Notifications/actions';\r\n\r\nexport default function* handleLoginSaga() {\r\n  yield takeLatest(HANDLE_LOGIN_REDIRECT, handleRedirect);\r\n  yield takeLatest(USER_LOGIN, login);\r\n  yield takeLatest(USER_LOGOUT, logout);\r\n  yield takeLatest(LOGIN_AGAINST_API, loginAPI);\r\n  yield takeLatest(SIGNUP_AGAINST_API, signupAPI);\r\n}\r\n\r\nfunction* handleRedirect() {\r\n  try {\r\n    const sessionData = yield authProvider.handleRedirect();\r\n    if (sessionData) {\r\n      yield put(tokenAcquired(sessionData));\r\n      yield put(loginAgainstAPI(sessionData.accessToken));\r\n    } else {\r\n      yield loadFromLocalStorage();\r\n    }\r\n  } catch (error) {\r\n    yield loadFromLocalStorage();\r\n  }\r\n}\r\n\r\nfunction* loadFromLocalStorage() {\r\n  const authState = JSON.parse(localStorage.getItem('auth'));\r\n  if (authState) {\r\n    yield put(LoadSessionFromLocalStorage(authState));\r\n  } else {\r\n    yield put(userUnauthenticated());\r\n  }\r\n}\r\n\r\nfunction* saveToLocalStorage() {\r\n  const authState = yield select((state) => state.auth);\r\n  localStorage.setItem('auth', JSON.stringify(authState));\r\n}\r\n\r\nfunction* login() {\r\n  try {\r\n    yield authProvider.loginRedirect();\r\n  } catch (error) {\r\n    yield put(userUnauthenticated());\r\n  }\r\n}\r\n\r\nfunction* logout() {\r\n  try {\r\n    localStorage.clear('auth');\r\n    yield authProvider.logout();\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n\r\nfunction* loginAPI(action) {\r\n  try {\r\n    const response = yield authApi.login(action.payload);\r\n    if (response.data?.nickname) {\r\n      yield put(loginAgainstAPISuccess(response.data.nickname));\r\n      yield saveToLocalStorage();\r\n    } else {\r\n      yield put(loadUserConfig());\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n    yield put(userUnauthenticated());\r\n  }\r\n}\r\n\r\nfunction* signupAPI() {\r\n  const nickname = yield select(userConfig_NicknameSelector);\r\n  const token = yield select(Auth_AccessTokenSelector);\r\n  try {\r\n    const response = yield authApi.signup({ nickname, token });\r\n    if (response) {\r\n      yield put(loginAgainstAPISuccess(response.data.nickname));\r\n      yield put(saveUserConfigSuccess(response.data.nickname));\r\n      yield saveToLocalStorage();\r\n    } else {\r\n      yield put(\r\n        displayNotification({\r\n          type: 'error',\r\n          message: 'Please choose a different nickame',\r\n        })\r\n      );\r\n      yield put(loadUserConfig());\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}