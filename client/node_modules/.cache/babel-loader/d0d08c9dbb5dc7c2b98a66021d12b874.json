{"ast":null,"code":"import { put, takeLatest, take } from 'redux-saga/effects';\nimport { fetchStreamSuccess } from './actions';\nimport { FETCH_STREAM, VIEWERS_UPDATE } from './constants';\nimport * as streamApi from '../../api/streams';\nexport default function* streamViewSaga() {\n  yield takeLatest(FETCH_STREAM, fetchStream);\n}\nexport function* fetchStream(action) {\n  try {\n    const stream = yield streamApi.getById(action.payload);\n    yield put(fetchStreamSuccess(stream));\n  } catch (error) {\n    console.error(error);\n  }\n}\nexport function* subscriberSaga() {\n  yield take(VIEWERS_UPDATE);\n}","map":{"version":3,"sources":["C:/Users/MircoFiocchi/Desktop/BroadcastApp/client/src/containers/StreamView/saga.js"],"names":["put","takeLatest","take","fetchStreamSuccess","FETCH_STREAM","VIEWERS_UPDATE","streamApi","streamViewSaga","fetchStream","action","stream","getById","payload","error","console","subscriberSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,UAAd,EAA0BC,IAA1B,QAAsC,oBAAtC;AACA,SAASC,kBAAT,QAAmC,WAAnC;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,aAA7C;AACA,OAAO,KAAKC,SAAZ,MAA2B,mBAA3B;AAEA,eAAe,UAAUC,cAAV,GAA0B;AACrC,QAAMN,UAAU,CAACG,YAAD,EAAeI,WAAf,CAAhB;AACH;AAED,OAAO,UAAUA,WAAV,CAAsBC,MAAtB,EAA6B;AAChC,MAAI;AACA,UAAMC,MAAM,GAAG,MAAMJ,SAAS,CAACK,OAAV,CAAkBF,MAAM,CAACG,OAAzB,CAArB;AACA,UAAMZ,GAAG,CAACG,kBAAkB,CAACO,MAAD,CAAnB,CAAT;AACH,GAHD,CAGE,OAAMG,KAAN,EAAa;AACXC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH;AACJ;AAED,OAAO,UAAUE,cAAV,GAA0B;AAC7B,QAAMb,IAAI,CAACG,cAAD,CAAV;AACH","sourcesContent":["import { put, takeLatest, take } from 'redux-saga/effects';\r\nimport { fetchStreamSuccess } from './actions';\r\nimport { FETCH_STREAM, VIEWERS_UPDATE } from './constants';\r\nimport * as streamApi from '../../api/streams';\r\n\r\nexport default function* streamViewSaga(){\r\n    yield takeLatest(FETCH_STREAM, fetchStream);\r\n}\r\n\r\nexport function* fetchStream(action){\r\n    try {\r\n        const stream = yield streamApi.getById(action.payload);\r\n        yield put(fetchStreamSuccess(stream));\r\n    } catch(error) {\r\n        console.error(error);\r\n    }\r\n}\r\n\r\nexport function* subscriberSaga(){\r\n    yield take(VIEWERS_UPDATE);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}