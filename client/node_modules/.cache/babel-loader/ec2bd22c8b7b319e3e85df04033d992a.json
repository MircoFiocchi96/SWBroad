{"ast":null,"code":"import { takeLatest, put, select } from 'redux-saga/effects';\nimport { FETCH_FAVORITES_STREAMS } from './constants';\nimport { getFavorite } from '../../api/user/getFavorite';\nimport { displayNotification } from '../Notifications/actions';\nimport { fetchFavoriteStreamsSuccess } from './actions';\nimport { Auth_NicknameSelector, Auth_AccessTokenSelector } from '../Auth/selectors';\nimport { fetchStreamsSuccess } from '../StreamsList/actions';\nexport default function* streamsFavoriteListSaga() {\n  yield takeLatest(FETCH_FAVORITES_STREAMS, fetchFavoriteStreams);\n}\nexport function* fetchFavoriteStreams(action) {\n  const nicknameSelector = yield select(Auth_NicknameSelector);\n  const tokenSelector = yield select(Auth_AccessTokenSelector);\n  const data = { ...action.payload,\n    nickname: nicknameSelector,\n    token: tokenSelector\n  };\n\n  try {\n    const streams = yield getFavorite(data);\n    yield put(fetchStreamsSuccess(streams));\n    yield put(fetchFavoriteStreamsSuccess());\n  } catch (error) {\n    yield put(displayNotification({\n      message: error.message\n    }));\n  }\n}","map":{"version":3,"sources":["C:/Users/MircoFiocchi/Desktop/BroadcastApp/client/src/containers/NavBar/saga.js"],"names":["takeLatest","put","select","FETCH_FAVORITES_STREAMS","getFavorite","displayNotification","fetchFavoriteStreamsSuccess","Auth_NicknameSelector","Auth_AccessTokenSelector","fetchStreamsSuccess","streamsFavoriteListSaga","fetchFavoriteStreams","action","nicknameSelector","tokenSelector","data","payload","nickname","token","streams","error","message"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,MAA1B,QAAwC,oBAAxC;AACA,SAASC,uBAAT,QAAwC,aAAxC;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,2BAAT,QAA4C,WAA5C;AACA,SACEC,qBADF,EAEEC,wBAFF,QAGO,mBAHP;AAIA,SAASC,mBAAT,QAAoC,wBAApC;AAEA,eAAe,UAAUC,uBAAV,GAAoC;AACjD,QAAMV,UAAU,CAACG,uBAAD,EAA0BQ,oBAA1B,CAAhB;AACD;AAED,OAAO,UAAUA,oBAAV,CAA+BC,MAA/B,EAAuC;AAC5C,QAAMC,gBAAgB,GAAG,MAAMX,MAAM,CAACK,qBAAD,CAArC;AACA,QAAMO,aAAa,GAAG,MAAMZ,MAAM,CAACM,wBAAD,CAAlC;AACA,QAAMO,IAAI,GAAG,EACX,GAAGH,MAAM,CAACI,OADC;AAEXC,IAAAA,QAAQ,EAAEJ,gBAFC;AAGXK,IAAAA,KAAK,EAAEJ;AAHI,GAAb;;AAKA,MAAI;AACF,UAAMK,OAAO,GAAG,MAAMf,WAAW,CAACW,IAAD,CAAjC;AACA,UAAMd,GAAG,CAACQ,mBAAmB,CAACU,OAAD,CAApB,CAAT;AACA,UAAMlB,GAAG,CAACK,2BAA2B,EAA5B,CAAT;AACD,GAJD,CAIE,OAAOc,KAAP,EAAc;AACd,UAAMnB,GAAG,CAACI,mBAAmB,CAAC;AAAEgB,MAAAA,OAAO,EAAED,KAAK,CAACC;AAAjB,KAAD,CAApB,CAAT;AACD;AACF","sourcesContent":["import { takeLatest, put, select } from 'redux-saga/effects';\r\nimport { FETCH_FAVORITES_STREAMS } from './constants';\r\nimport { getFavorite } from '../../api/user/getFavorite';\r\nimport { displayNotification } from '../Notifications/actions';\r\nimport { fetchFavoriteStreamsSuccess } from './actions';\r\nimport {\r\n  Auth_NicknameSelector,\r\n  Auth_AccessTokenSelector,\r\n} from '../Auth/selectors';\r\nimport { fetchStreamsSuccess } from '../StreamsList/actions';\r\n\r\nexport default function* streamsFavoriteListSaga() {\r\n  yield takeLatest(FETCH_FAVORITES_STREAMS, fetchFavoriteStreams);\r\n}\r\n\r\nexport function* fetchFavoriteStreams(action) {\r\n  const nicknameSelector = yield select(Auth_NicknameSelector);\r\n  const tokenSelector = yield select(Auth_AccessTokenSelector);\r\n  const data = {\r\n    ...action.payload,\r\n    nickname: nicknameSelector,\r\n    token: tokenSelector,\r\n  };\r\n  try {\r\n    const streams = yield getFavorite(data);\r\n    yield put(fetchStreamsSuccess(streams));\r\n    yield put(fetchFavoriteStreamsSuccess());\r\n  } catch (error) {\r\n    yield put(displayNotification({ message: error.message }));\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}